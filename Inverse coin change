//Inverse coin change

class Solution {
    public List<Integer> findCoins(int[] numWays) {
        int n = numWays.length;
        int[] dp = new int[n + 1];
        dp[0] = 1;
        List<Integer> result = new ArrayList<>();

        for(int coin = 1; coin <= n; coin++) {
            int[] temp = dp.clone();
            boolean valid = true;
            boolean changed = false;

            for(int i = coin; i <= n; i++) {
                temp[i] += temp[i - coin];

                if(temp[i] > numWays[i - 1]) {
                    valid = false;
                    break;
                }

                if(temp[i] != dp[i]) {
                    changed = true;
                }
            }

            if(valid && changed) {
                result.add(coin);
                dp = temp;
            }
        }

        for(int i = 1; i <= n; i++) {
            if(dp[i] != numWays[i - 1]) {
                return new ArrayList<>();
            }
        }

        return result;
    }
}
