//590. N-ary tree postorder traversal

class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};

class Solution {
    private List<Integer> node = new ArrayList<>();

    private void post(Node root) {
        if(root != null) {
            int size = root.children.size();

            for(int i = 0; i < size; i++) {
                post(root.children.get(i));
            }

            node.add(root.val);

        }
    }

    public List<Integer> postorder(Node root) {
        post(root);
        
        return node;
    }
}
