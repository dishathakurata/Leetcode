//143. Reorder list

public class ListNode {
    int val;
    ListNode next;
    ListNode() {}
    ListNode(int val) { this.val = val; }
    ListNode(int val, ListNode next) { this.val = val; this.next = next; }
}

class Solution {
    public void reorderList(ListNode head) {
        ListNode slowp = head;
        ListNode fastp = head;

        while(fastp.next != null && fastp.next.next != null) {
            fastp = fastp.next.next;
            slowp = slowp.next;
        }

        ListNode head2 = reverse(slowp);
        slowp.next = null;

        while(head != null && head2 != null) {
            ListNode temp1 = head.next;
            ListNode temp2 = head2.next;

            head.next = head2;
            head2.next = temp1;

            head = temp1;
            head2 = temp2;
        }
    }

    static ListNode reverse(ListNode head) {
        ListNode curr = head;
    	  ListNode prev = null;
    	  ListNode next = null;
    	
    	  while(curr != null) {
    		  next = curr.next;
    		  curr.next = prev;
    		  prev = curr;
    		  curr = next;
    	  }
    	
    	  head = prev;

        return head;
    }
}
