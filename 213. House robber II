//213. House robber II

class Solution {
    int robber(int[] nums) {
        int n = nums.length;
        int prev = nums[0];
        int prev2 = 0;

        for(int i = 0; i < n; i++) {
            int pick = nums[i];

            if(i > 1) {
                pick += prev2;
            }

            int nonpick = prev;
            int curr = Math.max(pick, nonpick);
            prev2 = prev;
            prev = curr;
        }

        return prev;
    }

    public int rob(int[] nums) {
        int n = nums.length;

        if(n == 1) {
            return nums[0];
        }

        int[] arr1 = new int[n - 1];
        int[] arr2 = new int[n - 1];

        for(int i = 0; i < n - 1; i++) {
            arr1[i] = nums[i + 1];
        }

        for(int i = 0; i < n - 1; i++) {
            arr2[i] = nums[i];
        }

        int a = robber(arr1);
        int b = robber(arr2);

        return Math.max(a, b);
    }
}
