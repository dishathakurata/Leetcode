//1008. Construct binary search tree from preorder traversal

public class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode() {}
    TreeNode(int val) { this.val = val; }
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        return buildBST(preorder, Long.MAX_VALUE, new int[]{0});
    }

    public TreeNode buildBST(int[] preorder, long max, int[] i) {
        if(i[0] == preorder.length || preorder[i[0]] > max) {
            return null;
        }

        TreeNode root = new TreeNode(preorder[i[0]++]);
        root.left = buildBST(preorder, root.val, i);
        root.right = buildBST(preorder, max, i);

        return root;
    }
}
