//1283. Find the smallest divisor given a threshold

class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
        int low = 1, high = findMax(nums);

        while(low <= high) {
            int mid = (low + high) / 2;
            int div = divisor(nums, mid);

            if(div <= threshold) {
                high = mid - 1;
            }
            else {
                low = mid + 1;
            }
        }

        return low;
    }

    public int findMax(int[] arr) {
        int maxi = Integer.MIN_VALUE;

        for(int i = 0; i < arr.length; i++) {
            maxi = Math.max(maxi, arr[i]);
        }

        return maxi;
    }

    public int divisor(int[] arr, int n) {
        int total = 0;

        for(int i = 0; i < arr.length; i++) {
            total += Math.ceil((double)(arr[i]) / (double)(n));
        }

        return total;
    }
}
