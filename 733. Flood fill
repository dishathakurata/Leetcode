//733. Flood fill

//Solution 1: BFS
class Pair {
    int row;
    int col;
    Pair(int _row, int _col) {
        this.row = _row;
        this.col = _col;
    }
}

class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int n = image.length;
        int m = image[0].length;
        int cur = image[sr][sc];
        int[] drow = {-1, 0, 1, 0};
        int[] dcol = {0, 1, 0, -1};
        Queue<Pair> q = new LinkedList<>();
        int[][] vis = new int[n][m];
        q.offer(new Pair(sr, sc));
        vis[sr][sc] = 1;
        image[sr][sc] = color;

        while(!q.isEmpty()) {
            int r = q.peek().row;
            int c = q.peek().col;
            q.remove();

            for(int i = 0; i < 4; i++) {
                int nrow = r + drow[i];
                int ncol = c + dcol[i];

                if(nrow >= 0 && nrow < n && ncol >= 0 && ncol < m && image[nrow][ncol] == cur && vis[nrow][ncol] == 0) {
                    q.offer(new Pair(nrow, ncol));
                    image[nrow][ncol] = color;
                    vis[nrow][ncol] = 1;
                }
            }
        }

        return image;
    }
}

//Solution 2: DFS
class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int n = image.length;
        int m = image[0].length;
        int cur = image[sr][sc];
        int[] drow = {-1, 0, 1, 0};
        int[] dcol = {0, 1, 0, -1};
        dfs(sr, sc, image, color, cur, drow, dcol, n, m);

        return image;
    }

    public void dfs(int sr, int sc, int[][] image, int newColor, int orgColor, int[] drow, int[] dcol, int n, int m) {
        if(sr < 0 || sr >= n || sc < 0 || sc >= m || image[sr][sc] == newColor) {
            return;
        }

        image[sr][sc] = newColor;
        
        for(int i = 0; i < 4; i++) {
                int nrow = sr + drow[i];
                int ncol = sc + dcol[i];

                if(nrow >= 0 && nrow < n && ncol >= 0 && ncol < m && image[nrow][ncol] == orgColor) {
                    dfs(nrow, ncol, image, newColor, orgColor, drow, dcol, n, m);
                }
            }
    }
}
