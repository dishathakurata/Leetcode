//78. Subsets

//Solution 1
class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> curr = new ArrayList<>();
        explore(nums, 0, curr, result);

        return result;
    }

    private void explore(int[] nums, int index, List<Integer> curr, List<List<Integer>> result) {
        if(index == nums.length) {
            result.add(new ArrayList<>(curr));
            return;
        }

        curr.add(nums[index]);
        explore(nums, index + 1, curr, result);
        curr.remove(curr.size() - 1);
        explore(nums, index + 1, curr, result);
    }
}

//Solution 2: Bit manipulation

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        int n = nums.length;
        List<List<Integer>> ans = new ArrayList<>();

        for(int i = 0; i < (1 << n); i++) {
            List<Integer> list = new ArrayList<>();

            for(int j = 0; j < n; j++) {
                if((i&(1 << j)) != 0) {
                    list.add(nums[j]);
                }
            }

            ans.add(list);
        }

        return ans;
    }
}
