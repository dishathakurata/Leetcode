//102. Binary tree level order traversal

public class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode() {}
    TreeNode(int val) { this.val = val; }
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<List<Integer>> level = new ArrayList<>();

        if(root == null) {
            return level;
        }

        queue.offer(root);

        while(!queue.isEmpty()) {
            List<Integer> nodes = new ArrayList<>();
            int s = queue.size();

            for(int i = 0; i < s; i++) {
                if(queue.peek().left != null) {
                    queue.offer(queue.peek().left);
                }

                if(queue.peek().right != null) {
                    queue.offer(queue.peek().right);
                }

                nodes.add(queue.poll().val);
            }

            level.add(nodes);
        }

        return level;
    }
}
