//547. Number of provinces

class Solution {
    public int findCircleNum(int[][] isConnected) {
        int n = isConnected.length;
        int count = 0;
        int[] vis = new int[n];
        List<List<Integer>> lst = new ArrayList<>();

        for(int i = 0; i < n; i++) {
            lst.add(new ArrayList<Integer>());
        }

        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n; j++) {
                if(isConnected[i][j] == 1 && i != j) {
                    lst.get(i).add(j);
                    lst.get(j).add(i);
                }
            }
        }

        for(int i = 0; i < n; i++) {
            if(vis[i] == 0) {
                count++;
                dfs(i, vis, lst);
            }
        }

        return count;
    }

    public void dfs(int node, int[] vis, List<List<Integer>> lst) {
        vis[node] = 1;

        for(Integer it : lst.get(node)) {
            if(vis[it] == 0) {
                dfs(it, vis, lst);
            }
        }
    }
}
