//103. Binary tree zigzag level order traversal

public class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode() {}
    TreeNode(int val) { this.val = val; }
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new LinkedList<>();
        Queue<TreeNode> q = new LinkedList<>();
        boolean level = true;

        if(root == null) {
            return ans;
        }

        q.offer(root);

        while(!q.isEmpty()) {
            int n = q.size();
            List<Integer> subList = new ArrayList<>();
            
            for(int i = 0; i < n; i++) {
                if(q.peek().left != null) {
                    q.offer(q.peek().left);
                }

                if(q.peek().right != null) {
                    q.offer(q.peek().right);
                }

                subList.add(q.poll().val);
            }

            if(level) {
                ans.add(subList);
                level = false;
            }
            else {
                Collections.reverse(subList);
                ans.add(subList);
                level = true;
            }
        }

        return ans;
    }
}
